#
# #  Default Generated by docker 
# FROM node:lts-alpine
# ENV NODE_ENV=production
# WORKDIR /usr/src/app
# COPY ["package.json", "package-lock.json*", "npm-shrinkwrap.json*", "./"]
# RUN npm install --production --silent && mv node_modules ../
# COPY . .
# EXPOSE 3014
# RUN chown -R node /usr/src/app
# USER node
# CMD ["npm", "start"]
#
#
#
#
#
#
# # Modified to run on Amd64 --- first try 
# FROM --platform=linux/amd64 node:lts-alpine
# ENV NODE_ENV=production
# WORKDIR /usr/src/app
# COPY ["package.json", "package-lock.json*", "npm-shrinkwrap.json*", "./"]
# RUN npm install --production --silent && mv node_modules ../
# COPY . .
# EXPOSE 3010
# RUN chown -R node /usr/src/app
# USER node
# CMD ["npm", "start"]
#


# Got errors when running first try so we added the commands to install chromium
# Use an official Node.js runtime as the base image
FROM --platform=linux/amd64 node:lts-alpine

# Set the working directory in the container to /usr/src/app
WORKDIR /usr/src/app

# Copy package.json and package-lock.json to the working directory
COPY ["package.json", "package-lock.json*", "npm-shrinkwrap.json*", "./"]

# Install the application dependencies
RUN apk update && apk add --no-cache \
  chromium \
  nss \
  freetype \
  freetype-dev \
  harfbuzz \
  ca-certificates \
  ttf-freefont \
  && npm install --production --silent && mv node_modules ../

# Set environment variables for Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
  PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Copy the rest of the application code to the working directory
COPY . .

# Expose port 3014 for the application
EXPOSE 3014

# Change the owner of the /usr/src/app directory to the node user
RUN chown -R node /usr/src/app && rm -rf /var/cache/apk/

# Run the application as the node user
USER node

# Start the application
CMD ["npm", "start"]
